""""
https://leetcode.com/problems/pascals-triangle/

Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:




Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]

"""
"""
The idea is to identify the pattern 


"""

class Solution:
    def generate(self, numRows: int):

        if numRows==1:
            return [[1]]

        if numRows==2:
            return [[1] ,[1 ,1]]

        result =[[1] ,[1 ,1]]
        numRows =numRows -2

        currentRow =1
        while numRows>0:
            tempArray =[None] *(currentRow+2)
            currentRowArray =result[currentRow]
            tempArray[0] =currentRowArray[0]
            for i in range(1 ,len(currentRowArray )):
                tempArray[i ]=currentRowArray[i -1] +currentRowArray[i]
            tempArray[-1] =currentRowArray[-1]

            result.append(tempArray)
            #print(tempArray)
            numRows-=1
            currentRow+=1
        return result




object=Solution()

numRows=5

object.generate(numRows)